<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>net.wf0b.code</groupId>
  <artifactId>MnConvention</artifactId>
  <version>2023.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>MnConvention</name>
  <description>A means to process the MnConvention registration CSV to clean up certain character escapes, and handle
    the Seminar Selection Array appropriately to create an XLS (Excel Spreadsheet) file.</description>
  <url>https://maven.apache.org</url>

  <developers>
    <developer>
      <id>wgfra</id>
      <name>Bill Franzen</name>
      <email>wgfranzen@gmail.com</email>
      <organization>personal</organization>
      <roles>
        <role>architect</role>
        <role>developer</role>
      </roles>
      <timezone>America/Chicago</timezone>
    </developer>
  </developers>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>

    <shared.directory>C:/Users/wgfra/AppData/Local/Share</shared.directory>
    <jdbc.directory>${shared.directory}/jdbcDrivers</jdbc.directory>
    <release.directory>${shared.directory}/Release</release.directory>
    <snapshot.directory>${shared.directory}/Snapshot</snapshot.directory>
    <documentation.directory>${shared.directory}/Documentation</documentation.directory>
    <localapps.directory>${shared.directory}/LocalApps</localapps.directory>
    <github.io.directory>C:/Users/wgfra/IdeaProjects/wgfranzen.github.io</github.io.directory>

    <!-- https://mvnrepository.com/artifact/org.antlr/stringtemplate -->
    <string.template.version>4.3.4</string.template.version>

    <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-csv -->
    <commons.csv.version>1.10.0</commons.csv.version>

    <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-text -->
    <commons.text.version>1.10.0</commons.text.version>

    <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
    <commons.io.version>2.11.0</commons.io.version>

    <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
    <!-- Serialize Formats, Controls -->
    <gson.version>2.10</gson.version>

    <!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api -->
    <!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
    <log4j.version>2.19.0</log4j.version>

    <!-- https://mvnrepository.com/artifact/info.picocli/picocli-codegen -->
    <!-- https://mvnrepository.com/artifact/info.picocli/picocli -->
    <picocli.version>4.7.0</picocli.version>

    <!--< https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter -->
    <junit.jupiter.version>5.9.1</junit.jupiter.version>

    <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-clean-plugin -->
    <maven.clean.plugin>3.2.0</maven.clean.plugin>

    <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-resources-plugin -->
    <maven.resources.plugin>3.3.0</maven.resources.plugin>

    <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-compiler-plugin -->
    <maven.compiler.plugin>3.10.1</maven.compiler.plugin>

    <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-surefire-plugin -->
    <maven.surefire.plugin>3.1.2</maven.surefire.plugin>

    <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-surefire-report-plugin -->
    <maven.surefire.report.plugin>3.1.2</maven.surefire.report.plugin>

    <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-jxr-plugin -->
    <maven.jxr.plugin>3.3.0</maven.jxr.plugin>

    <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-jar-plugin -->
    <maven.jar.plugin>3.3.0</maven.jar.plugin>

    <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-dependency-plugin -->
    <maven.dependency.plugin>3.4.0</maven.dependency.plugin>

    <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-install-plugin -->
    <!--maven.install.plugin>3.0.0-M1</maven.install.plugin-->
    <maven.install.plugin>3.1.0</maven.install.plugin>

    <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-deploy-plugin -->
    <!--maven.deploy.plugin>3.0.0-M1</maven.deploy.plugin-->
    <maven.deploy.plugin>3.0.0</maven.deploy.plugin>

    <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-resources-plugin -->
    <maven.resources.plugin>3.3.0</maven.resources.plugin>

    <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-site-plugin -->
    <!--maven.site.plugin>3.9.1</maven.site.plugin-->
    <maven.site.plugin>4.0.0-M4</maven.site.plugin>

    <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-project-info-reports-plugin -->
    <maven.project.info.reports.plugin>3.4.1</maven.project.info.reports.plugin>

    <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-javadoc-plugin -->
    <maven.javadoc.plugin>3.5.0</maven.javadoc.plugin>

    <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-assembly-plugin -->
    <maven.assembly.plugin>3.4.2</maven.assembly.plugin>

    <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
    <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-simple -->
    <slf4j.version>2.0.6</slf4j.version>

    <!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml -->
    <apache.poi-ooxml.version>5.2.3</apache.poi-ooxml.version>

  </properties>

  <dependencies>


    <!-- https://mvnrepository.com/artifact/org.commonmark/commonmark -->
    <!--dependency>
      <groupId>org.commonmark</groupId>
      <artifactId>commonmark</artifactId>
      <version>0.21.0</version>
    </dependency-->

    <!-- https://mvnrepository.com/artifact/org.antlr/stringtemplate -->
    <!--dependency>
      <groupId>org.antlr</groupId>
      <artifactId>ST4</artifactId>
      <version>${string.template.version}</version>
    </dependency-->

    <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
    <!--dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons.io.version}</version>
    </dependency-->

    <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-text -->
    <!--dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
      <version>${commons.text.version}</version>
    </dependency-->

    <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-csv -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-csv</artifactId>
      <version>${commons.csv.version}</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml -->
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <version>${apache.poi-ooxml.version}</version>
    </dependency>


    <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
    <!--dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency-->

    <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-simple -->
    <!--dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>${slf4j.version}</version>
      <scope>test</scope>
    </dependency-->

    <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
    <!-- Serialize Formats, Controls -->
    <!--dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>${gson.version}</version>
    </dependency-->

    <!-- https://mvnrepository.com/artifact/info.picocli/picocli -->
    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli</artifactId>
      <version>${picocli.version}</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/info.picocli/picocli-codegen -->
    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli-codegen</artifactId>
      <version>${picocli.version}</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>

    <!--dependency>
      <groupId>org.jetbrains</groupId>
      <artifactId>annotations</artifactId>
      <version>23.1.0</version>
      <scope>compile</scope>
    </dependency-->

  </dependencies>

  <distributionManagement>
    <repository>
      <uniqueVersion>false</uniqueVersion>
      <id>releases</id>
      <name>Release Repository</name>
      <url>file://${github.io.directory}</url>
      <layout>default</layout>
    </repository>
    <snapshotRepository>
      <uniqueVersion>false</uniqueVersion>
      <id>snapshots</id>
      <name>Snapshot Repository</name>
      <url>file://${snapshot.directory}</url>
      <layout>default</layout>
    </snapshotRepository>
  </distributionManagement>

  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (maybe moved to parent pom) -->
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven.clean.plugin}</version>
        </plugin>

        <!-- test of maven resources plugin -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.3.0</version>
          <executions>
            <execution>
              <id>copy-resources</id>
              <phase>verify</phase>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <outputDirectory>${github.io.directory}/${project.artifactId}</outputDirectory>
                <resources>
                  <resource>
                    <directory>${basedir}/target/site</directory>
                    <!--filtering>true</filtering-->
                  </resource>
                </resources>
              </configuration>
            </execution>
          </executions>
        </plugin>


        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven.compiler.plugin}</version>
          <!-- annotationProcessorPaths for picocli -->
          <configuration>
            <annotationProcessorPaths>
              <path>
                <groupId>info.picocli</groupId>
                <artifactId>picocli-codegen</artifactId>
                <version>${picocli.version}</version>
              </path>
            </annotationProcessorPaths>
            <compilerArgs>
              <arg>-Aproject=${project.groupId}/${project.artifactId}</arg>
            </compilerArgs>
          </configuration>
        </plugin>

        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven.surefire.plugin}</version> <!-- to support DisplayName tags in junit reporting -->
          <configuration>
            <additionalClasspathElements>
            </additionalClasspathElements>
            <argLine>-Xms2048m -Xmx8192m</argLine>
            <!-- groups are:
                 detail    - all tests over all code
                 special   - limited testing, typically module under test
                 Generate  - tests code generation
            -->
            <groups>Registration</groups>
            <statelessTestsetReporter
                    implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5Xml30StatelessReporter">
              <disable>false</disable>
              <version>3.0</version>
              <usePhrasedFileName>false</usePhrasedFileName>
              <usePhrasedTestSuiteClassName>true</usePhrasedTestSuiteClassName>
              <usePhrasedTestCaseClassName>true</usePhrasedTestCaseClassName>
              <usePhrasedTestCaseMethodName>true</usePhrasedTestCaseMethodName>
            </statelessTestsetReporter>
            <consoleOutputReporter
                    implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5ConsoleOutputReporter">
              <disable>false</disable>
              <encoding>UTF-8</encoding>
              <usePhrasedFileName>false</usePhrasedFileName>
            </consoleOutputReporter>
            <statelessTestsetInfoReporter
                    implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5StatelessTestsetInfoReporter">
              <disable>false</disable>
              <usePhrasedFileName>false</usePhrasedFileName>
              <usePhrasedClassNameInRunning>true</usePhrasedClassNameInRunning>
              <usePhrasedClassNameInTestCaseSummary>true</usePhrasedClassNameInTestCaseSummary>
            </statelessTestsetInfoReporter>
          </configuration>
        </plugin>

        <!--
         | mvn javadoc:jar creates a javadoc jar
         | mvn source:jar creates a sources jar
         | -->
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven.jar.plugin}</version>
          <configuration>
            <archive>
              <manifest>
                <addClasspath>true</addClasspath>
                <mainClass>net.wf0b.code.MnConvention</mainClass>
                <classpathPrefix>dependency/</classpathPrefix>
              </manifest>
            </archive>
          </configuration>
        </plugin>

        <!-- The assembly is run manually.
         |   Prior to execution, execute mvn dependency:copy-dependencies.
         |   This will create the dependency directory in the project build directory.
         |
         |
         | The jar plugin (above) refers to this directory in classpathPrefix, enabling mainClass
         |   execution.
         |
         |   Execute mvn assembly:single after all steps are completed for generating prerequisites.
         |
         | -->
        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${maven.assembly.plugin}</version>
          <configuration>
            <descriptors>
              <!-- Intended for Linux -->
              <descriptor>src/assembly/bin.xml</descriptor>
              <!-- Intended for Windows -->
              <descriptor>src/assembly/windows.xml</descriptor>
            </descriptors>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>single</goal>
              </goals>
              <phase>package</phase>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven.install.plugin}</version>
        </plugin>

        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven.deploy.plugin}</version>
        </plugin>

        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven.site.plugin}</version>
          <configuration>
            <outputDirectory>${project.build.directory}/site</outputDirectory>
            <!-- changed Sep-2021 to support api-doc in gitHub -->
            <!--outputDirectory>${documentation.directory}/${project.artifactId}/${project.version}</outputDirectory-->
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>${maven.project.info.reports.plugin}</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <reporting>
    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>${maven.surefire.report.plugin}</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>${maven.jxr.plugin}</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven.javadoc.plugin}</version>
        <configuration>
          <show>private</show>
          <outputDirectory>${documentation.directory}/api-docs/${project.artifactId}/${project.version}
          </outputDirectory>
          <description>API for ${project.name} ${project.version}</description>
          <detectLinks>true</detectLinks>
          <failOnError>true</failOnError>
        </configuration>
      </plugin>

    </plugins>
  </reporting>
</project>